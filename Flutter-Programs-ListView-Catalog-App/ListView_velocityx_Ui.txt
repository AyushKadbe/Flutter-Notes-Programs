How to get Data for ItemWidget to display in home_page.dart ?
1. Create a File with data e.x catalog.dart
2. Create a local JSON file & add it to app
3. Have a Networking, backend or API keeping the same data format

METHOD 1:
NOTE: catalog.dart contains DATA ITEMS (id, name, image source, color)
      item_widget.dart contains UI CODE fetching data from catalog.dart
1) Create catalog.dart (contain DataModel & DataModel structuring)
2) Create ItemWidget() inside lib/widgets/
  -create object of class Item
  -create constructor of class object
  -create ListTile wrapped in Card with ONTAP LOGIC to show leading Image & Data on homescreen
3) inside home_page.dart ListView.builder
  - CatalogModel.item Data inside ItemWidget() Structure
  - Call catalog.dart using ListView.builder returing ItemWidget(item: CatalogModel.item[index])
  - Call ItemWidget(item: CatalogModel.item[index])  showing items of CatalogModel in ListView/Structure
   of ItemWidget()/item_widget.dart.

METHOD 2:
Step 1)
Step 2)
Step 3) 
Step 4) In home_page.dart
  - create a initState() method
  - create a loadData() method to fetch data from JSON file in assets/files/catalog.json 
  - loadData(
     Json to String convert
     String to Map decode using dart:convert library
     decodedData(in map) = jsonDecode(catalog);
     productData = decodedData["products"];
  )
  

Step 5) In Catalog.dart 
    we need to map the decodedData of catalog.json
    How to represent data of catalog using Catalog.json files
  - create a factory Constructor & tell it that Data is comming from Catalog.json & then create Objects according to it.
  - Item is already is constructor > we are creating it's named constructor using .
  - i.e CREATE A DECODING DATA CONSTRUCTOR: String to Map
  - also CREATE A ENCODING DATA CONSTRUCTOR: Map to String
  
Step 6) Now in loadData() in home_page.dart
  - get List of mapped Items decoded in Catalog.dart
  - in catalog.dart , catalog.item is also a LIST of item static final List<Item> item = {}
  - await delay
  -check in ListView line 60 and progress bar

FETCH DATA:
===========
* First we fetched DATA from LOCAL JSON FILE, now we will fetch data from JSON file at a URL
  final url = "https://api.npoint.io/8d733da5ae7ebfe8581f";
   final response = await http.get(Uri.parse(url));  //this gives response from url
    final catalogJson = response.body;  //get json data 
 
CLEAN CODE:
===========
* Remove Singletons in cart & catalog model
* Make Stateful of pages to stateless
  in cart_page.dart & add_to_cart.dart;
* Remove unused imports.
* Create a AddMutation() WIDGET for adding items replace with _cart.add() method
  & also use AddMutation() in  VxState.watch(context, on: [AddMutation, RemoveMutation]);
 to redraw the widget in statelesswidget
  or
  FOR REFRESHING ONLY CERTAIN/component of a screen
  > Use VxConsumer(   mutations: const {RemoveMutation},) instaed of Container: []
   or VxBuilder
   
CART_PAGE ALGO: -
=================
cart page consists of a stateless widget with a column
* having CartTotal() widget for total price & "Buy button"
* having CartList() widget for showing Items list as a placeholder in column
* Need a CartModel(Item & its components Structure) to fetch data items to be shown in Cart listod

ADD TO CART ALGO:
=================
* Twik catalog_list.dart add add AddToCart Widget: which shows done button/number of product on product list
* Create new home widget AddToCart.dart move addToCart from Catalog_List.DART to this widget. call it in catalog_list
* Cart page
* CartModel
* AddToCart widget in Catalog_List.dart
* Create a Singleton class(Object is created only once & Retrieved Again & Again)
  so that everytime, new model is NOT created or less everytime initial value of cart item will be zero.
  -> Singleton Class cartModel in cart.dart
  -> Singleton Class catalogModel in catalog.dart

HOMEPAGE ALGO:-
===============
home_widgets
 /catalog_header.dart
 /catalog_image.dart
 /catalog_list.dart

 //HEADER widget is called
 //CatalogList shows the items fetched using CatalogItem constructor in the ListView.builder  
 //Get CatalogItem for CatalogList using a CatalogItems constructor
 //CatalogImage: Returns Image from Image.network

 ROUTING:
 ========
 * Add onTap() property on ListView.builder of catalog_list.dart to NAVIGATE
 from Catalog.item of HomePage to ProductDetails Page of item of that catalog.

flutter run --no-sound-null-safety
flutter run --web-renderer html
flutter run --no-sound-null-safety --web-renderer html

